{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","props","onSubmit","handleSubmit","newName","handleName","onBlur","newNumber","handleNumber","type","Person","person","onClick","name","number","Persons","persons","handleDelete","map","key","id","baseUrl","axios","get","then","res","data","newPerson","post","delete","console","log","put","Notification","notification","classes","successful","className","message","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","setNotification","personsToShow","toLowerCase","includes","useEffect","personService","handlePersonUpdate","window","confirm","showNotification","find","p","updatedPerson","returnedPerson","catch","error","setTimeout","event","target","preventDefault","addedPerson","concat","trim","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cfbbf2f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <input value={value} onChange={onChange} />\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                Name: <input value={props.newName} onChange={props.handleName} onBlur={props.onBlur} />\r\n            </div>\r\n            <div>\r\n                Number: <input value={props.newNumber} onChange={props.handleNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, onClick }) => {\r\n    return (\r\n        <div>\r\n            <span>{person.name} {person.number}</span>\r\n            <button onClick={onClick}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, handleDelete }) => (\r\n    persons.map(person => <Person key={person.id} person={person} onClick={() => handleDelete(person)} />)\r\n)\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl)\r\n\r\n    return req.then(res => {\r\n        return res.data\r\n    })\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const req = axios.post(baseUrl, newPerson)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const req = axios.delete(`${baseUrl}/${id}`)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst update = (person) => {\r\n    console.log(`${baseUrl}/${person.id}`)\r\n    console.log(person)\r\n    const req = axios.put(`${baseUrl}/${person.id}`, person)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (!notification) return null\r\n\r\n    const classes = `notification ${notification.successful ? 'success' : 'error'}`\r\n    return (\r\n        <div className={classes}>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport './css/index.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notification, setNotification] = useState(null)\n\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(data => {\n                setPersons(data)\n            })\n    }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        if (persons.find(person => person.name.toLowerCase() === newName.toLowerCase())) {\n            handlePersonUpdate()\n        } else {\n            const newPerson = {\n                name: newName,\n                number: newNumber\n            }\n\n            showNotification(`Added ${newPerson.name}`)\n\n            personService\n                .create(newPerson)\n                .then(addedPerson => {\n                    setPersons(persons.concat(addedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                })\n        }\n    }\n\n    const handleDelete = (person) => {\n\n        if (window.confirm(`Delete ${person.name} ?`)) {\n            showNotification(`Deleted ${person.name}`)\n\n            personService.remove(person.id)\n                .then(removedPerson => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                })\n        }\n\n    }\n\n    const handlePersonUpdate = () => {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n            showNotification(`Modified ${newName}`)\n\n            const person = persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n            const updatedPerson = { ...person, number: newNumber }\n            personService.update(updatedPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                }).catch(error => {\n                    showNotification(`Information of ${newName} has already been removed from server`, false)\n                    setPersons(persons.filter(p => p.id !== person.id))\n                })\n        }\n    }\n\n    const showNotification = (message, successful = true) => {\n        setNotification({ message, successful })\n        setTimeout(() => setNotification(null), 5000)\n    }\n\n    const handleFilter = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const handleName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const formatInput = (event) => {\n        setNewName(newName.trim())\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notification={notification} />\n\n            <Filter value={filter} onChange={handleFilter} />\n\n            <h2>Add a new</h2>\n            <PersonForm\n                handleSubmit={handleSubmit}\n                newName={newName}\n                handleName={handleName}\n                newNumber={newNumber}\n                handleNumber={handleNumber}\n                onBlur={formatInput} />\n\n            <h2>Numbers</h2>\n            <Persons persons={personsToShow} handleDelete={handleDelete} />\n\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}