{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/People.js","services/people.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","props","onSubmit","handleSubmit","newName","handleName","onBlur","newNumber","handleNumber","type","Person","person","onClick","name","number","People","people","handleDelete","map","key","id","axios","get","then","res","data","newPerson","post","delete","put","Notification","notification","classes","successful","className","message","App","useState","setPeople","setNewName","setNewNumber","filter","setFilter","setNotification","peopleToShow","toLowerCase","includes","useEffect","personService","handlePersonUpdate","window","confirm","showNotification","find","p","updatedPerson","returnedPerson","catch","error","setTimeout","event","target","preventDefault","createdPerson","concat","console","log","response","trim","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ee33363.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <input value={value} onChange={onChange} />\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                Name: <input value={props.newName} onChange={props.handleName} onBlur={props.onBlur} />\r\n            </div>\r\n            <div>\r\n                Number: <input value={props.newNumber} onChange={props.handleNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, onClick }) => {\r\n    return (\r\n        <div>\r\n            <span>{person.name} {person.number}</span>\r\n            <button onClick={onClick}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst People = ({ people, handleDelete }) => (\r\n    people.map(person => <Person key={person.id} person={person} onClick={() => handleDelete(person)} />)\r\n)\r\n\r\nexport default People","import axios from 'axios'\r\nconst baseUrl = 'api/people'\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl)\r\n\r\n    return req.then(res => {\r\n        return res.data\r\n    })\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const req = axios.post(baseUrl, newPerson)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const req = axios.delete(`${baseUrl}/${id}`)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst update = (person) => {\r\n    const req = axios.put(`${baseUrl}/${person.id}`, person)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (!notification) return null\r\n\r\n    const classes = `notification ${notification.successful ? 'success' : 'error'}`\r\n    return (\r\n        <div className={classes}>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport People from './components/People'\nimport personService from './services/people'\nimport Notification from './components/Notification'\nimport './css/index.css'\n\nconst App = () => {\n    const [people, setPeople] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notification, setNotification] = useState(null)\n\n    const peopleToShow = people.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(data => {\n                setPeople(data)\n            })\n    }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n\n        if (people.find(person => person.name.toLowerCase() === newName.toLowerCase())) {\n            handlePersonUpdate()\n        } else {\n            const newPerson = {\n                name: newName,\n                number: newNumber\n            }\n\n            personService\n                .create(newPerson)\n                .then(createdPerson => {\n                    setPeople(people.concat(createdPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    showNotification(`Added ${newPerson.name}`)\n                })\n                .catch(error => {\n                    console.log('Error adding person:', error.response.data.error)\n                    showNotification(error.response.data.error, false)\n                })\n        }\n    }\n\n    const handleDelete = (person) => {\n\n        if (window.confirm(`Delete ${person.name} ?`)) {\n            showNotification(`Deleted ${person.name}`)\n\n            personService.remove(person.id)\n                .then(removedPerson => {\n                    setPeople(people.filter(p => p.id !== person.id))\n                })\n        }\n\n    }\n\n    const handlePersonUpdate = () => {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n            showNotification(`Modified ${newName}`)\n\n            const person = people.find(p => p.name.toLowerCase() === newName.toLowerCase())\n            const updatedPerson = { ...person, number: newNumber }\n            personService.update(updatedPerson)\n                .then(returnedPerson => {\n                    setPeople(people.map(p => p.id !== person.id ? p : returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                }).catch(error => {\n                    showNotification(`Information of ${newName} has already been removed from server`, false)\n                    setPeople(people.filter(p => p.id !== person.id))\n                })\n        }\n    }\n\n    const showNotification = (message, successful = true) => {\n        setNotification({ message, successful })\n        setTimeout(() => setNotification(null), 5000)\n    }\n\n    const handleFilter = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const handleName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const formatInput = (event) => {\n        setNewName(newName.trim())\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notification={notification} />\n\n            <Filter value={filter} onChange={handleFilter} />\n\n            <h2>Add a new</h2>\n            <PersonForm\n                handleSubmit={handleSubmit}\n                newName={newName}\n                handleName={handleName}\n                newNumber={newNumber}\n                handleNumber={handleNumber}\n                onBlur={formatInput} />\n\n            <h2>Numbers</h2>\n            <People people={peopleToShow} handleDelete={handleDelete} />\n\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}